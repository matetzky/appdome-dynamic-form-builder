{"ast":null,"code":"var _jsxFileName = \"/Users/jmatetzky/Desktop/test-app-dome/appdome-dynamic-form-builder/src/components/Form/Form.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCirclePlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport NewField from \"./NewField/NewField\";\nimport \"./Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    form,\n    updateCurrentFormFields,\n    handleClose\n  } = _ref;\n  const [fields, setFields] = useState([...(form === null || form === void 0 ? void 0 : form.fields)]);\n  const [showNewField, setShowNewField] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(true);\n\n  ///////////////////////////////////////////////////////////\n\n  function checkMandatoryFields(fields) {\n    console.log('boom', fields);\n    for (let i = 0; i < (fields === null || fields === void 0 ? void 0 : fields.length); i++) {\n      const field = fields[i];\n      if (field.isMandatory && field.value === \"\") {\n        return false;\n      }\n      ;\n    }\n    return true;\n  }\n  ///////////////////////////////////////////////////////////\n  const validateForm = () => {\n    {\n      /* First Validation -> No empty Mandotry Fields */\n    }\n    return checkMandatoryFields(fields);\n    {\n      /* More Validation Should be added here... */\n    }\n  };\n  ///////////////////////////////////////////////////////////\n  const handleSubmit = () => {\n    if (validateForm) {\n      updateCurrentFormFields(fields);\n      handleClose();\n    } else {\n      setFormIsValid(false);\n    }\n  };\n\n  ///////////////////////////////////////////////////////////\n  const handleAddField = fieldData => {\n    setFields([...fields, fieldData]);\n  };\n  ///////////////////////////////////////////////////////////\n  const handleDeleteField = index => setFields(fields === null || fields === void 0 ? void 0 : fields.filter((_, i) => i !== index));\n  ///////////////////////////////////////////////////////////\n  const renderFields = () => {\n    const filterNonEmptyFields = fields === null || fields === void 0 ? void 0 : fields.filter(field => field.length !== 0);\n    return filterNonEmptyFields === null || filterNonEmptyFields === void 0 ? void 0 : filterNonEmptyFields.map((field, index) => {\n      let fieldElement = null;\n      switch (field.type) {\n        /* Text */\n        case \"text\":\n          fieldElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `field-${index}`,\n              className: \"field-title\",\n              children: [field === null || field === void 0 ? void 0 : field.name, (field === null || field === void 0 ? void 0 : field.isMandatory) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mandatory-indicator\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: `field-${index}`,\n              placeholder: field.name,\n              onChange: e => {\n                field.value = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this);\n          break;\n          {\n            /* Dropdown */\n          }\n        case \"dropdown\":\n          fieldElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"field-title\",\n              htmlFor: `field-${index}`,\n              children: [field.name, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `field-${index}`,\n              onChange: e => {\n                field.value = e.target.value;\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true,\n                selected: true,\n                value: \"\",\n                children: field.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mandatory-indicator\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), field.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, optionIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this);\n          break;\n          {\n            /* Checkbox */\n          }\n        case \"checkbox\":\n          fieldElement = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"field-title\",\n              children: [field.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mandatory-indicator\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), field.options.map((option, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: option.isMandatory,\n                    onChange: () => {\n                      field.value = [...field.value, option];\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this);\n          break;\n        default:\n          fieldElement = null;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields-container\",\n        children: [fieldElement, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"delete-icon\",\n          onClick: () => handleDeleteField(index),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"form-delete-icon\",\n            icon: faTrash,\n            onClick: () => handleDeleteField(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-trash\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  ///////////////////////////////////////////////////////////\n  const handleToggleNewField = () => {\n    setShowNewField(!showNewField);\n  };\n  ///////////////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    handle: \".form-toolbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: handleClose,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-toolbar-header\",\n          children: \"New Form Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: form.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), !validateForm(fields) && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"form-invalid-message\",\n            children: \"Not All Required Fields Have Been Filled Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Fields:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), renderFields()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleToggleNewField,\n                onClose: handleToggleNewField,\n                children: [\"Add New Field\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCirclePlus,\n                  className: \"create-new-form-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), showNewField && /*#__PURE__*/_jsxDEV(NewField, {\n          onAddField: handleAddField,\n          onClose: handleToggleNewField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"cEi7xplmvBNzgdUUosAGB/fbhg0=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Draggable","FontAwesomeIcon","faCirclePlus","faTrash","NewField","jsxDEV","_jsxDEV","Form","_ref","_s","form","updateCurrentFormFields","handleClose","fields","setFields","showNewField","setShowNewField","formIsValid","setFormIsValid","checkMandatoryFields","console","log","i","length","field","isMandatory","value","validateForm","handleSubmit","handleAddField","fieldData","handleDeleteField","index","filter","_","renderFields","filterNonEmptyFields","map","fieldElement","type","className","children","htmlFor","name","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","onChange","e","target","disabled","selected","options","option","optionIndex","checked","onClick","icon","handleToggleNewField","handle","onClose","onAddField","_c","$RefreshReg$"],"sources":["/Users/jmatetzky/Desktop/test-app-dome/appdome-dynamic-form-builder/src/components/Form/Form.js"],"sourcesContent":["import { React, useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCirclePlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport NewField from \"./NewField/NewField\";\n\nimport \"./Form.css\";\n\nconst Form = ({ form, updateCurrentFormFields, handleClose }) => {\n  const [fields, setFields] = useState([...form?.fields]);\n  const [showNewField, setShowNewField] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(true);\n\n  ///////////////////////////////////////////////////////////\n\n  function checkMandatoryFields(fields) {\n    console.log('boom', fields)\n    for (let i = 0; i < fields?.length; i++) {\n      const field = fields[i];\n      if (field.isMandatory && (field.value === \"\")) {\n        return false;\n      };\n    }\n    return true;\n  }\n  ///////////////////////////////////////////////////////////\n  const validateForm = () => {\n    {\n      /* First Validation -> No empty Mandotry Fields */\n    }\n    return checkMandatoryFields(fields);\n    {\n      /* More Validation Should be added here... */\n    }\n  };\n  ///////////////////////////////////////////////////////////\n  const handleSubmit = () => {\n    \n    if (validateForm) {\n      updateCurrentFormFields(fields);\n      handleClose();\n    }\n    else {\n      setFormIsValid(false);\n    }\n  };\n\n  ///////////////////////////////////////////////////////////\n  const handleAddField = (fieldData) => {\n    setFields([...fields, fieldData]);\n  };\n  ///////////////////////////////////////////////////////////\n  const handleDeleteField = (index) =>\n    setFields(fields?.filter((_, i) => i !== index));\n  ///////////////////////////////////////////////////////////\n  const renderFields = () => {\n    const filterNonEmptyFields = fields?.filter((field) => field.length !== 0);\n    return filterNonEmptyFields?.map((field, index) => {\n      let fieldElement = null;\n\n      switch (field.type) {\n        /* Text */\n        case \"text\":\n          fieldElement = (\n            <div className=\"field-container\">\n              {/* Fields Title */}\n              <label htmlFor={`field-${index}`} className=\"field-title\">\n                {field?.name}\n                {field?.isMandatory && (\n                  <span className=\"mandatory-indicator\">*</span>\n                )}\n                :\n              </label>\n\n              {/* Text Input */}\n              <input\n                type=\"text\"\n                id={`field-${index}`}\n                placeholder={field.name}\n                onChange={(e) => {\n                  field.value = e.target.value;\n                }}\n              />\n            </div>\n          );\n          break;\n\n          {\n            /* Dropdown */\n          }\n        case \"dropdown\":\n          fieldElement = (\n            <div className=\"field-container\">\n              <label className=\"field-title\" htmlFor={`field-${index}`}>\n                {field.name}:\n              </label>\n              <select\n                id={`field-${index}`}\n                onChange={(e) => {\n                  field.value = e.target.value;\n                }}\n              >\n                <option disabled selected value=\"\">\n                  {field.name}\n                </option>\n                <span>\n                  <span className=\"mandatory-indicator\">*</span>\n                </span>\n                {field.options.map((option, optionIndex) => (\n                  <option value={option} key={optionIndex}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </div>\n          );\n          break;\n\n          {\n            /* Checkbox */\n          }\n        case \"checkbox\":\n          fieldElement = (\n            <div className=\"form-container\">\n              <span className=\"field-title\">\n                {field.name}\n                <span className=\"mandatory-indicator\">*</span>\n              </span>\n              {field.options.map((option, index) => {\n                return(\n                <div key={index}>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={option.isMandatory}\n                      onChange={() => {\n                        field.value = [...field.value, option];\n                      }}\n                    />\n                    {option}\n                  </label>\n                </div>\n              )})}\n            </div>\n          );\n          break;\n        default:\n          fieldElement = null;\n      }\n\n      return (\n        <div className=\"form-fields-container\" key={index}>\n          {fieldElement}\n          <span\n            className=\"delete-icon\"\n            onClick={() => handleDeleteField(index)}\n          >\n            <FontAwesomeIcon\n              className=\"form-delete-icon\"\n              icon={faTrash}\n              onClick={() => handleDeleteField(index)}\n            />\n            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n          </span>\n        </div>\n      );\n    });\n  };\n\n  ///////////////////////////////////////////////////////////\n  const handleToggleNewField = () => {\n    setShowNewField(!showNewField);\n  };\n  ///////////////////////////////////////////////////////////\n\n  return (\n    <Draggable handle=\".form-toolbar\">\n      <div className=\"form-popup\">\n        {/* Form's editor's toolbar */}\n        <div className=\"form-toolbar\">\n          <button className=\"close-button\" onClick={handleClose}>\n            X\n          </button>\n          <p className=\"form-toolbar-header\">New Form Editor</p>\n        </div>\n\n        {/* Form's Body */}\n        <div className=\"form-content\">\n          {/* Form's Header */}\n          <h2>{form.name}</h2>\n\n          {/* Form Validation Message */}\n          {!validateForm(fields) && (\n            <ul>\n              <p className=\"form-invalid-message\">\n                Not All Required Fields Have Been Filled Up\n              </p>\n            </ul>\n          )}\n\n          <ul>\n            <div className=\"form-container\">\n              {/* Form's Fields */}\n              <ul>\n                <p>Fields:</p>\n                {renderFields()}\n              </ul>\n\n              {/* Add New Field '+' button */}\n              <ul>\n                <button\n                  onClick={handleToggleNewField}\n                  onClose={handleToggleNewField}\n                >\n                  Add New Field\n                  <FontAwesomeIcon\n                    icon={faCirclePlus}\n                    className=\"create-new-form-icon\"\n                  />\n                </button>\n              </ul>\n            </div>\n          </ul>\n\n          {/* Launch New Field Editor */}\n          {showNewField && (\n            <NewField\n              onAddField={handleAddField}\n              onClose={handleToggleNewField}\n            />\n          )}\n          <button className=\"submit-button\" onClick={handleSubmit}>\n            Submit\n          </button>\n        </div>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}